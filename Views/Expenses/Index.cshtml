@model IEnumerable<Expense_Manager.Models.Expense>


@{
    ViewData["Title"] = "Index";
    
}



<h1>Index</h1>

<form asp-action="Search" method="post" class="form-inline">
    <div class="form-group row">
        <label for="Name" class="col-sm-2 col-form-label">Expense Name</label>
        <div class="col-sm-4">
            <input type="text" for="Name" name="Name" class="form-control" placeholder="Name" />
        </div>
    </div>
    <div class="form-group row">
        <label for="Type" class="col-sm-2 col-form-label">Expense Type</label>
        <div class="col-sm-4">
            <select for="Type" name="Type" class="form-control">
                <option value="">-- Select Type --</option>
                <option value="Operating">Operating</option>
                <option value="Non-operating">Non-operating</option>
                <option value="Fixed">Fixed</option>
                <option value="Variable">Variable</option>
            </select>
        </div>
    </div>
    <div class="form-group row">
        <label for="Amount" class="col-sm-2 col-form-label">Expense Amount Range</label>
        <div class="col-sm-4">
            <input type="number" id="AmountFrom" name="AmountFrom" class="form-control" placeholder="From" />
        </div>
        <div class="col-sm-4">
            <input type="number" id="AmountTo" name="AmountTo" class="form-control" placeholder="To" />
        </div>
        <div class="col-sm-2">
            <span id="amountError" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <label for="Date" class="col-sm-2 col-form-label">Expense Date Range</label>
        <div class="col-sm-4">
            <input type="date" id="DateFrom" name="DateFrom" class="form-control" placeholder="From" />
        </div>
        <div class="col-sm-4">
            <input type="date" id="DateTo" name="DateTo" class="form-control" placeholder="To" />
        </div>
        <div class="col-sm-2">
            <span id="dateError" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2"></div>
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</form>



<p>
    <a asp-action="Create">Create New</a>
</p>

<!-- HTML canvas element to render the chart -->
<canvas id="expenseChart" width="600" height="400"></canvas>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("form").submit(function (event) {
                var amountFrom = parseInt($("#AmountFrom").val());
                var amountTo = parseInt($("#AmountTo").val());
                var dateFrom = parseInt($("#DateFrom").val());
                var dateTo = parseInt($("#DateTo").val());

                if (amountFrom > amountTo) {
                    $("#amountError").text("From value must be smaller than or equal to To value");
                    event.preventDefault(); // Prevent form submission
                } else {
                    $("#amountError").text(""); // Clear the error message
                }

                if (dateFrom > dateTo) {
                    $("#dateError").text("From value must be smaller than or equal to To value");
                    event.preventDefault(); // Prevent form submission
                } else {
                    $("#dateError").text(""); // Clear the error message
                }
            });
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Retrieve the data from the model
        var expenses = @Html.Raw(Json.Serialize(Model));
        console.log(expenses);


        // Extract the required data for the chart
        var expenseNames = expenses.map(e => e.expenseName);
        var expenseAmounts = expenses.map(e => e.expenseAmount);
        var expenseType = ["Operating", "Non-operating", "Fixed", "Variable"];
        // Create the chart
        var ctx = document.getElementById('expenseChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: expenseType,
                datasets: [{
                    label: 'Expense Amount',
                    data: expenseAmounts,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}
